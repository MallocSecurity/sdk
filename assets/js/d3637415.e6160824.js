"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[230],{6627:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"api-reference/checkUrl","title":"\ud83c\udf10 URL Threat Detection","description":"The Malloc Security SDK provides a mechanism to check and categorize URLs by contacting the Malloc backend service. This can help your application detect and respond to potentially harmful domains.","source":"@site/docs/api-reference/checkUrl.md","sourceDirName":"api-reference","slug":"/api-reference/checkUrl","permalink":"/sdk/api-reference/checkUrl","draft":false,"unlisted":false,"editUrl":"https://github.com/mallocsecurity/sdk/edit/website/docs/api-reference/checkUrl.md","tags":[],"version":"current","frontMatter":{},"sidebar":"mallocSidebar","previous":{"title":"\ud83e\ude93 Root Check","permalink":"/sdk/api-reference/rootCheck"},"next":{"title":"\ud83d\udd75\ufe0f Spyware Indicators Check","permalink":"/sdk/api-reference/scanForDeviceSpyware"}}');var i=s(4848),c=s(8453);const t={},o="\ud83c\udf10 URL Threat Detection",l={},a=[{value:"Option 1: Asynchronous Usage",id:"option-1-asynchronous-usage",level:2},{value:"Java",id:"java",level:4},{value:"Option 2: Synchronous Usage",id:"option-2-synchronous-usage",level:2},{value:"Java",id:"java-1",level:4},{value:"\ud83d\udce6 Sample JSON Response",id:"-sample-json-response",level:2},{value:"Interpretation",id:"interpretation",level:2},{value:"\u2705 Best Practices",id:"-best-practices",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,c.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"-url-threat-detection",children:"\ud83c\udf10 URL Threat Detection"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.strong,{children:"Malloc Security SDK"})," provides a mechanism to check and categorize URLs by contacting the Malloc backend service. This can help your application detect and respond to potentially harmful domains."]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"This operation is available in both synchronous and asynchronous versions (with callbacks)."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"option-1-asynchronous-usage",children:"Option 1: Asynchronous Usage"}),"\n",(0,i.jsx)(n.h4,{id:"java",children:"Java"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'String url = "domaintocheck.com";\nMallocSDK.checkURLAsync(url, new MallocSDK.ScanFinishedCallback() {\n    @Override\n    public void onScanFinished(JSONObject result) {\n        // Use the result\n    }\n});\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"option-2-synchronous-usage",children:"Option 2: Synchronous Usage"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["Do ",(0,i.jsx)(n.strong,{children:"not"})," call this on the main/UI thread."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"java-1",children:"Java"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'ExecutorService executor = Executors.newSingleThreadExecutor();\nexecutor.execute(new Runnable() {\n    @Override\n    public void run() {\n        String url = "domaintocheck.com";\n        JSONObject urlCategory = MallocSDK.checkURLSync(url);\n        // Use the result\n    }\n});\nexecutor.shutdown();\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"-sample-json-response",children:"\ud83d\udce6 Sample JSON Response"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "status": "success",\n  "details": {\n    "category": "spyware"\n  }\n}\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"interpretation",children:"Interpretation"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"category"}),": The Theat category of the URL. The possible categories are:"]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Category"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'"other"'})}),(0,i.jsx)(n.td,{children:"Uncategorized or unrecognized domain"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'"spyware"'})}),(0,i.jsx)(n.td,{children:"Associated with spyware"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'"porn"'})}),(0,i.jsx)(n.td,{children:"Adult or pornographic content"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'"coinmining"'})}),(0,i.jsx)(n.td,{children:"Used for crypto mining activities"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'"phishing"'})}),(0,i.jsx)(n.td,{children:"Known phishing or scam domains"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'"ads"'})}),(0,i.jsx)(n.td,{children:"Used for ads or tracking"})]})]})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"status"})," field in the returned JSON indicates the result of the operation. Possible values include:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"success"}),"  \u2013 The operation completed successfully and the result contains valid data."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"failed_sdk_not_initialized"})," \u2013 The SDK was not initialized before the function was called. Ensure MallocSDK has been initialised."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"failed_access_forbidden"})," \u2013 The operation was blocked, possibly due to missing permissions or restricted access."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"failed_no_internet_connection"})," \u2013 The device has no active internet connection, which is required to perform the scan."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"error"})," \u2013 A general error occurred during the operation (e.g., unexpected exception or parsing failure)."]}),"\n"]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["These status strings are defined as final constants in the ",(0,i.jsx)(n.a,{href:"/sdk/api-reference/mallocSdkResponseJson",children:"MallocSdkResponseJson"})," class."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"-best-practices",children:"\u2705 Best Practices"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Always perform URL checks after the SDK has been properly initialized."}),"\n",(0,i.jsx)(n.li,{children:"Use the asynchronous version in UI components to avoid blocking the main thread."}),"\n",(0,i.jsx)(n.li,{children:"Always check the status field before relying on other content within the JSON."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>o});var r=s(6540);const i={},c=r.createContext(i);function t(e){const n=r.useContext(c);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(c.Provider,{value:n},e.children)}}}]);